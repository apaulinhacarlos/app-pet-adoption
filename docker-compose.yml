version: '3.1'
services:
  database:
    container_name: database
    image: mysql:8.0.32
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
      interval: 10s
      timeout: 5s
      retries: 3
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
  backend:
    container_name: backend
    build: ./backend
    ports:
      - 3001:3001
    working_dir: /app-backend
    command: npm run dev
    environment:
      - APP_PORT=3001
      - MYSQL_USER=root
      - MYSQL_PASSWORD=123456
      - MYSQL_HOST=database
      - MYSQL_PORT=3306
      - MYSQL_NAME=PET-ADOPTION
      - FRONTEND_URL=http://localhost:5173
      - FRONTEND_DOMAIN=localhost
      - JWT_SECRET=jwt_secret
    volumes: 
      - ./backend/src:/app-backend/src
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"]
      interval: 10s
      timeout: 5s
      retries: 3
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      target: development # o campo target: development na configuração de build do frontend garante que a fase correta seja usada para desenvolvimento.
    ports:
      - 5173:5173
    working_dir: /app-frontend
    command: npm run dev
    volumes: 
      - ./frontend/src:/app-frontend/src
    depends_on:
      - backend
    healthcheck: # Os `healthcheck` devem garantir que a aplicação está operacional, antes de liberar o container
      test: ["CMD", "lsof", "-t", "-i:5173"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      interval: 10s
      timeout: 5s
      retries: 3